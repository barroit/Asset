#!/usr/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
BG_BLACK='\033[40m'
NC='\033[0m'

die()
{
	>&2 echo fatal: $*
	exit 1
}

error()
{
	>&2 echo error: $*
	return 1
}

findstr()
{
	if [[ -z $1 ]]
	then
		die 'findstr() requires target($1)'
	fi

	str="$1"
	shift

	if [[ -z $@ ]]
	then
		die 'findstr() requires array($@)'
	fi

	arr=("$@")

	printf '%s\0' "${arr[@]}" | grep -Fxqz -- "$str"

	return $?
}

echo_link_ok()
{
	if [[ -z $1 ]]
	then
		die 'echo_link_success() requires target($1)'
	fi

	echo -e "${CYAN}$1${NC} -> ${GREEN}$2${NC}"
}

echo_link_no()
{
	if [[ -z $1 ]]
	then
		die 'echo_link_success() requires target($1)'
	fi

	if [[ -z $2 ]]
	then
		die 'echo_link_success() requires dest($2)'
	fi

	>&2 echo -ne "${RED}${BG_BLACK}$1${NC} -> ${RED}${BG_BLACK}$2${NC}"
}

if [[ -z $REMOTE_FILESYS ]]
then
	die "you forget to ‘make onedrive’"
fi

commands=('mount' 'ls' 'unmount')
command="${1:-mount}"

if ! findstr "$command" "${commands[@]}"
then
	error "unknown command '$command'"
	exit 1
fi

mounted=$(mount | grep rclone | awk '{print $3"/"}')

if [[ "$command" == 'unmount' ]]
then
	if [[ -z $mounted ]]
	then
		echo 'nothing to be done'
	else
		while read file
		do
			fusermount -u "$file"
			echo_link_ok "$file"
		done <<< "$mounted"
	fi

	exit 0
fi

if [[ "$command" == 'ls' ]]
then
	if [[ ! -z $mounted ]]
	then
		echo "${mounted[@]}"
	else
		rclone lsf --dirs-only "$REMOTE_FILESYS:"
	fi

	exit 0
fi

if [[ ! -z $mounted ]]
then
	error "at least one dir on remote filesys $REMOTE_FILESYS \
		has been mounted, run ‘ntfs unmount’ first!"
	exit 1
fi

mountlist=$(rclone lsf --dirs-only "$REMOTE_FILESYS:")

for name in ${mountlist[@]}
do
	destpath="$HOME/$name"

	if [[ ${destpath:0-1} == '/' ]]
	then
		destpath="${destpath%?}"
	fi

	junkfile=$(ls -A "$destpath" | wc -l)
	if [[ $junkfile -gt 0 ]]
	then
		if [[ $junkfile -gt 1 ]]
		then
			echo -n "$junkfile files are found in ‘$destpath’, "
			echo 'remove them? [y/N]'
		else
			echo -n "$junkfile file is found in ‘$destpath’, "
			echo 'remove it? [y/N]'
		fi

		read -sN1 delfile

		case "$delfile" in
		[yY])
			rm -rf "$destpath"/*
			;;
		*)
			echo_link_no "$name" "$destpath"
			continue
			;;
		esac
	fi

	if rclone mount "$REMOTE_FILESYS:$name" "$destpath" \
		--vfs-cache-mode full --daemon
	then
		echo_link_ok "$name" "$destpath"
	else
		echo_link_no "$name" "$destpath"
	fi
done
