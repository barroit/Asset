#!/usr/bin/bash

source "$BRUTIL"

GREEN='\033[0;32m'
CYAN='\033[0;36m'
NC='\033[0m'

E_()
{
	if [[ -z $1 ]]
	then
		die 'E_() requires at least one argument($1)'
	fi

	if [[ ! -z $2 ]]
	then
		error "$1, ‘$2’ has been skipped."
	else
		>&2 echo "‘$1’ has been skipped."
	fi
}

escaped_content()
{
	if [[ -z $1 ]]
	then
		die 'escaped_content() requires content($1)'
	fi

	printf "%s" "$1" | sed -e 's/[\/&]/\\&/g'
}

parse_file()
{
	if [[ -z $1 ]]
	then
		die 'parse_file() requires filename($1)'
	fi

	local lineno=0
	local total_lineno=$(wc -l < "$1")
	local prev_line
	local next_line

	local lval
	local rval

	while read prev_line
	do
		lineno=$((lineno + 1))

		if ! grep -Pq '^.\s<BR>(.*)__BRVAR__(.*)<BR>\s([^\s]+)'\
			<<< $prev_line
		then
			continue
		fi

		lval=$(grep -Po '(?<=<BR>)(.*)__BRVAR__(.*)(?=<BR>)'\
				<<< $prev_line)
		rval=$(eval echo $(grep -Po '(?<=<BR>\s)([^\s]+)'\
					<<< $prev_line))

		next_line=$(escaped_content \
				"${lval//__BRVAR__/$rval}")

		if [[ $lineno -eq $total_lineno ]]
		then
			prev_line=$(escaped_content "$prev_line")
			sed -i "$lineno s/.*/$prev_line\n$next_line/" "$1"
			return # nothing to be done next
		fi

		read prev_line
		lineno=$((lineno + 1))

		sed -i "$lineno s/.*/$next_line/" "$1"
	done < "$1"
}

lineno=0

while read line
do
	lineno=$((lineno + 1))

	read name path extra <<< $line

	if [[ $name == '#' || -z $name ]]
	then
		continue
	fi

	if [[ -z $path ]]
	then
		E_ "‘$line’ at line $lineno is invalid" "$name"
		continue
	fi

	localpath="$ROOT/$name"
	if [[ ! -f $localpath ]]
	then
		E_ "local config file ‘$localpath’ not exists" "$name"
		continue
	fi

	destpath=$(eval echo "$path")

	if [[ ${destpath:0-1} == '/' ]]
	then
		destdir="${destpath%?}"
		destpath+=$(basename "$name")
	else
		destdir=$(dirname "$destpath")
	fi

	if [[ ! -e $destdir ]]
	then
		if ! mkdir "$destdir"
		then
			E_ "$name"
			continue
		fi
	elif [[ ! -d $destdir ]]
	then
		E_ "file ‘$destdir’ exists but is not a directory" "$name"
		continue
	fi

	if [[ ! -x $destdir || ! -w $destdir ]]
	then
		E_ "not enough permissions to \
		     create file in ‘$destdir’" "$name"
	fi

	if ! ln -sf "$localpath" "$destpath"
	then
		E_ "$name"
		continue
	else
		printf "${CYAN}%-20s${NC} -> ${GREEN}%-15s${NC}%s\n"\
			"$name" "$destpath"
	fi

	if [[ -z $extra ]]
	then
		continue
	fi

	while read action
	do
		case $action in
		'eval')
			parse_file "$localpath"
			;;
		*)
			error "unknown action '$action'"
			break
		esac
	done <<< $(echo "$extra" | tr ',' '\n')

done < "$ROOT/filemap.list"
